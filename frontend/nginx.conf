user nginx;
worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
events {
  worker_connections 1024;
}
http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log notice;
  rewrite_log on;
  sendfile on;
  server {
    listen 3000;
    listen [::]:3000;
    server_name localhost;
    root /usr/share/nginx/html;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain application/javascript text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype;

    # No robots.txt exists, so manually return a 404 for this. Remove if we ever do add it.
    location = /robots.txt {
      return 404;
    }



    # Set cache for static content
    location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png|otf|ttf|eot|woff|woff2|svg)$ {
      expires 1y;
      add_header Cache-Control "public";
    }




    # All other requests redirect to the inbox as a default, routing is done client-side (in the react app)
    location / {
      index index.html;
      try_files $uri /index.html;
      add_header Content-Security-Policy "script-src 'self'; object-src 'none';" always;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
    }
  }
}
